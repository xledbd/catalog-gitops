apiVersion: v1
items:
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      app.openshift.io/connects-to: catalog-postgresql
      app.openshift.io/vcs-ref: "6.8"
      app.openshift.io/vcs-uri: https://github.com/RedHat-EMEA-SSA-Team/end-to-end-developer-workshop.git
      jkube.io/git-branch: "6.8"
      jkube.io/git-commit: 86e03ceb9fdac60851acdde3e06fe2fc8fb22fc9
      jkube.io/git-url: https://github.com/RedHat-EMEA-SSA-Team/end-to-end-developer-workshop.git
    labels:
      app: catalog
      app.kubernetes.io/instance: catalog
      app.kubernetes.io/name: catalog
      app.kubernetes.io/part-of: coolstore
      app.openshift.io/runtime: spring
      component: catalog
      group: com.redhat.cloudnative
      provider: jkube
      version: 1.0-SNAPSHOT
    name: catalog-coolstore
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 2
    selector:
      matchLabels:
        app: catalog
        group: com.redhat.cloudnative
        provider: jkube
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          app.openshift.io/vcs-ref: "6.8"
          app.openshift.io/vcs-uri: https://github.com/RedHat-EMEA-SSA-Team/end-to-end-developer-workshop.git
          jkube.io/git-branch: "6.8"
          jkube.io/git-commit: 86e03ceb9fdac60851acdde3e06fe2fc8fb22fc9
          jkube.io/git-url: https://github.com/RedHat-EMEA-SSA-Team/end-to-end-developer-workshop.git
        creationTimestamp: null
        labels:
          app: catalog
          app.kubernetes.io/instance: catalog
          app.kubernetes.io/part-of: coolstore
          component: catalog
          group: com.redhat.cloudnative
          maistra.io/expose-route: "true"
          provider: jkube
          version: 1.0-SNAPSHOT
        name: catalog
      spec:
        containers:
        - image: image-registry.openshift-image-registry.svc:5000/coolstore-staging/catalog-coolstore:latest
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /actuator/health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: spring-boot
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          - containerPort: 9779
            name: prometheus
            protocol: TCP
          - containerPort: 8778
            name: jolokia
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /actuator/health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
kind: List
metadata:
  resourceVersion: ""
